"""
Django settings for MxOnline project.

Generated by 'django-admin startproject' using Django 1.10.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))  # 加入根搜索路径
sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))  # 加入根搜索路径

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g4!zj-5v5_k7#e1t2m!c353!2_g2!6xylrjr^#3godasn($*8t'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']  # DEBUG = False的时候必须设置ALLOWED_HOSTS参数， '*'表示所有客户端都可以访问


# Application definition
AUTHENTICATION_BACKENDS = (
    'users.views.CustomBackend',
)


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'courses',
    'organization',
    'operation',
    'xadmin',  # 没有智能提示，也没有报错。。。。
    'crispy_forms',
    'captcha',
    'pure_pagination',
]
AUTH_USER_MODEL = "users.UserProfile"  # 默认user信息表是users下面的UserProfile表
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'MxOnline.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',  # 上下文处理器 把mdial_url自动注册到html中.django1.8以前在core中
            ],
        },
    },
]

WSGI_APPLICATION = 'MxOnline.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'mxonline',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': '127.0.0.1'
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'zh-hans'  # 语言汉字

TIME_ZONE = 'Asia/Shanghai'  # 时区

USE_I18N = True

USE_L10N = True

USE_TZ = False  # True表示国际UTC时间，False表示本地时间


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
"""
这个名字可以随便取也不可以随便去, 
1> 可以随便取的时候  在html文件开头引用： {% load staticfiles %}
在开头引用这句话， 用的时候： src="{% static 'image/666.png' %}"
这里的static指取寻找STATICFILES_DIRS目录下的 image/666.png文件，所以你可以看到，与根目录地址(/static/)无关
2> 不能随便取名的时候 src="{{STATIC_URL}}image/666.png"
这样写的意思是我按照硬编码的形式来找静态文件： /static/image/666.png，万一你随便取了个
STATIC_URL = '/static6666/'就表示src="/static6666/image/666.png"，但是所有文件存在/static/目录下，
然而没有/static6666/这个路径，所以根本找不到路径!!(除非你把保存静态文件夹的名字也改成：static6666，那我就不说欧化了)
"""
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),  # 静态文件保存在那些文件夹下面
)

# 邮箱配置
EMAIL_HOST = 'smtp.sina.com'  # 服务器
EMAIL_PORT = 25   # 邮箱端口端口
EMAIL_HOST_USER = '1400720231_mina@sina.com'  # 用户名字
EMAIL_HOST_PASSWORD = "250onion????"  # 邮箱账号密码
EMAIL_USE_TLS = True # 与SMTP服务器通信时，是否启动TLS链接(安全链接)。默认是false
EMAIL_FROM = '1400720231_mina@sina.com'  # 发送者，一般和EMAIL_HOST_USER保持一直，不然会报错


MEDIA_URL = '/media/'  # 不能随便取 因为用的时候src="{{MEDIA_URL}}/image/..."表示按照这个路径找
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
"""
MEDIA_ROOT只能设置一个，不然她不知道到底存放再哪里，和static不同，static是准备取出来用的，可以到设置的目录里找就行了，
但是MEDIA_ROOT是为了保存上传文件的地方，你要是设置多个，他不晓得存在什么地方。可以，没毛病！
"""
# DEBUG=False的时候， 记配置static文件的STATIC_ROOT， 然后再url中serve一下
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

